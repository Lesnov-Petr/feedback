{"version":3,"sources":["Components/Feedback/Section/Section.jsx","Components/Feedback/FeedbackOptions/FeedbackOptions.jsx","Components/Feedback/Notification/Notification.jsx","Components/Feedback/Statistics/Statistics.jsx","Components/Feedback/Feedback.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","onIncrement","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","onLeaveFeedback","event","isBtnText","target","textContent","countTotalFeedback","setState","prevState","countPositiveFeedbackPercentage","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIC,UAAU,kBAAd,SAAiCF,IAChCC,MCWQE,G,MAhBS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzB,OACE,sBAAKF,UAAU,WAAf,UACE,wBAAQA,UAAU,MAAMG,KAAK,SAASC,QAASF,EAA/C,kBAGA,wBAAQF,UAAU,MAAMG,KAAK,SAASC,QAASF,EAA/C,qBAGA,wBAAQF,UAAU,MAAMG,KAAK,SAASC,QAASF,EAA/C,sBCASG,G,MARM,SAAC,GAAD,EAAGC,QAAH,OACnB,mBAAGN,UAAU,UAAb,8CCqBaO,G,MArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAiB,IAAVD,EACL,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,qCACE,oBAAGN,UAAU,aAAb,mBAAiCQ,KACjC,oBAAGR,UAAU,aAAb,sBAAoCS,KACpC,oBAAGT,UAAU,aAAb,kBAAgCU,KAChC,oBAAGV,UAAU,aAAb,oBAAkCW,KAClC,oBAAGX,UAAU,aAAb,gCAA8CY,EAA9C,YCmDSC,E,4MA1DbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGtBG,gBAAkB,SAACC,GACjB,IAAMC,EAAYD,EAAME,OAAOC,YAC/B,EAAKC,qBACL,EAAKC,UAAS,SAACC,GACb,MAAkB,SAAdL,EACK,CAAET,KAAMc,EAAUd,KAAO,GACT,YAAdS,EACF,CAAER,QAASa,EAAUb,QAAU,GAE/B,CAAEC,IAAKY,EAAUZ,IAAM,MAGlC,EAAKa,mC,EAGPH,mBAAqB,WACnB,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEX,MAAOW,EAAUX,MAAQ,O,EAGtCY,gCAAkC,WAChC,EAAKF,UAAS,SAACC,GACb,MAAO,CACLV,mBAAoBY,KAAKC,MACtBH,EAAUd,KAAOc,EAAUX,MAAS,U,4CAM7C,WACE,OACE,sBAAKX,UAAU,WAAf,UACE,cAAC,EAAD,CAASA,UAAU,UAAUF,MAAM,wBAAnC,SACE,cAAC,EAAD,CAAiBI,YAAawB,KAAKX,oBAErC,cAAC,EAAD,CAASf,UAAU,UAAUF,MAAM,aAAnC,SACE,cAAC,EAAD,CACEU,KAAMkB,KAAKZ,MAAMN,KACjBC,QAASiB,KAAKZ,MAAML,QACpBC,IAAKgB,KAAKZ,MAAMJ,IAChBC,MAAOe,KAAKZ,MAAMH,MAClBC,mBAAoBc,KAAKZ,MAAMF,8B,GAnDpBe,IAAMC,WCKdC,MAPf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCFN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d699f1c5.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport \"./section.scss\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"feedback__title\">{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import \"./index.scss\";\r\n\r\nconst FeedbackOptions = ({ onIncrement }) => {\r\n  return (\r\n    <div className=\"controls\">\r\n      <button className=\"btn\" type=\"button\" onClick={onIncrement}>\r\n        Good\r\n      </button>\r\n      <button className=\"btn\" type=\"button\" onClick={onIncrement}>\r\n        Neutral\r\n      </button>\r\n      <button className=\"btn\" type=\"button\" onClick={onIncrement}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport \"./index.scss\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className=\"message\">No feedback given &#128530;</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification\";\r\nimport \"./index.scss\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return total === 0 ? (\r\n    <Notification message=\"No feedback given\" />\r\n  ) : (\r\n    <>\r\n      <p className=\"evaluation\">Good: {good}</p>\r\n      <p className=\"evaluation\">Neutral: {neutral}</p>\r\n      <p className=\"evaluation\">Bad: {bad}</p>\r\n      <p className=\"evaluation\">Total: {total}</p>\r\n      <p className=\"evaluation\">Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport Section from \"./Section\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistics\";\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (event) => {\r\n    const isBtnText = event.target.textContent;\r\n    this.countTotalFeedback();\r\n    this.setState((prevState) => {\r\n      if (isBtnText === \"Good\") {\r\n        return { good: prevState.good + 1 };\r\n      } else if (isBtnText === \"Neutral\") {\r\n        return { neutral: prevState.neutral + 1 };\r\n      } else {\r\n        return { bad: prevState.bad + 1 };\r\n      }\r\n    });\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState((prevState) => {\r\n      return { total: prevState.total + 1 };\r\n    });\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        positivePercentage: Math.round(\r\n          (prevState.good / prevState.total) * 100\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"feedback\">\r\n        <Section className=\"section\" title=\"Please leave feedback\">\r\n          <FeedbackOptions onIncrement={this.onLeaveFeedback} />\r\n        </Section>\r\n        <Section className=\"section\" title=\"Statistics\">\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.state.total}\r\n            positivePercentage={this.state.positivePercentage}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\nimport Feedback from \"./Components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}